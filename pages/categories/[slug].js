import Head from "next/head";
import { getCategories, getCategoryPosts } from "../../services";

import { Loader, Pagination, PostCard, PostWidget } from "../../components";
import { useRouter } from "next/router";

const POSTS_PER_PAGE = 6;

export default function CategoryPost({ posts, currentPage, numPages }) {
  const router = useRouter();
  if (router.isFallback) {
    return <Loader />;
  }
  return (
    <div className="container body-padding mx-auto mb-8">
      <Head>
        <title>Blog- EOS Naija</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ICO" />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
          integrity="sha512-BNfIB9vyH+Fy+ZWJ46FLAx/eQwTq3kIzDZP6sJocI8Rup9XfBgV7ywx92JDT1T+Txd3BqP2/F2ZMKY+u6rLd9g=="
          crossOrigin="anonymous"
          referrerPolicy="no-referrer"
        />
      </Head>
      <div className="h-0.5 my-2 bg-gray-500 w-full">
        <br />
      </div>
      <div className="grid grid-cols-1 lg:grid-cols-12 gap-12">
        <div className="grid md:grid-cols-2 lg:grid-cols-3 lg:col-span-9 col-span-1">
          {posts?.map((post) => (
            <PostCard post={post} key={post.title} />
          ))}
        </div>
        <div className="lg:col-span-3 col-span-1">
          <div className="lg:sticky relative top-24">
            <PostWidget />
          </div>
        </div>
      </div>
      <Pagination currentPage={currentPage} numPages={numPages} />
    </div>
  );
}

export async function getStaticProps({ params }) {
  const { posts } = (await getCategoryPosts(params.slug)) || [];
  const page = parseInt((params && params.page) || "1", 10);
  const numPages = Math.ceil(posts.length / POSTS_PER_PAGE);
  const startIndex = (page - 1) * POSTS_PER_PAGE;
  const endIndex = startIndex + POSTS_PER_PAGE;
  const slicedPosts = posts.slice(startIndex, endIndex);
  return {
    props: {
      posts: slicedPosts,
      currentPage: page,
      numPages: numPages,
    },
  };
}

export async function getStaticPaths() {
  const categories = await getCategories();

  const paths = categories.map((category) => ({
    params: { slug: category.slug },
  }));

  return {
    paths,
    fallback: true,
  };
}
